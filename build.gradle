// 1. queryDSL 추가
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    // 2. queryDSL 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'kr.ezen'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {  // 추가하고 코끼리 눌러야함

    // =================== 기존 =================== //
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 3. querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    // 유효성 체크
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // 모델 Mapper --> Config에서 환경설정 해줌
    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.4'

    // 카카오 인증 OAuth 로그인 - gson 라이브러리 => JSON 데이터를 처리하기 위하여 사용
    // 받아온 "access_token": 값만을 사용하기 위해
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'

    // =================== 보건 =================== //
    // 의존성 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-mail'      // 이메일 인증 의존성 라이브러리 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'  // security 의존성 라이브러리 추가
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'  // security 의존성 라이브러리 추가
    testImplementation 'org.springframework.security:spring-security-test'  // security test

    // 이메일 인증
    // https://mvnrepository.com/artifact/javax.mail/mail
    implementation group: 'javax.mail', name: 'mail', version: '1.4.7'
//    // https://mvnrepository.com/artifact/org.springframework/spring-context
//    implementation group: 'org.springframework', name: 'spring-context', version: '5.2.2.RELEASE'

//    // 'jackson' -> databind 검색
//    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
//    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'

//    // security
//    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
//    implementation group: 'org.springframework.security', name: 'spring-security-core', version: '5.7.5'
//    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-web
//    implementation group: 'org.springframework.security', name: 'spring-security-web', version: '5.7.5'
//    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-config
//    implementation group: 'org.springframework.security', name: 'spring-security-config', version: '5.7.5'



    // =================== 지수 =================== //
    //파일 업로드
    //implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
    
    // =================== 태인 =================== //
    // 파일업로드
    // https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'


}

tasks.named('test') {
    useJUnitPlatform()
}

// 4. queryDSL 추가 : QueryDSL 빌드 옵션
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
